name: CI/CD to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT }}
  GAR_LOCATION: ${{ vars.AR_LOCATION }}
  REPOSITORY: ${{ vars.AR_REPOSITORY }}
  IMAGE: fastapi-gke-demo
  CLUSTER_NAME: ${{ vars.GKE_CLUSTER }}
  CLUSTER_ZONE: ${{ vars.GKE_ZONE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2️⃣ Authenticate to Google Cloud
    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    # 3️⃣ Configure Docker to use Artifact Registry
    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    # 4️⃣ Build and push Docker image
    - name: Build and Push Docker image
      run: |
        IMAGE_URI=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

    # 5️⃣ Get GKE credentials (connects kubectl to your cluster)
    - name: Get GKE credentials
      run: gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_ZONE }}

    # 6️⃣ Deploy to GKE
    - name: Deploy to GKE
      run: |
        IMAGE_URI=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
        
        # Update existing deployment image OR create if not exists
        kubectl set image deployment/fastapi-deployment fastapi=$IMAGE_URI --record || true

        # Apply manifests (creates if not already there)
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    # 7️⃣ Verify deployment rollout
    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/fastapi-deployment
        kubectl get service fastapi-service
