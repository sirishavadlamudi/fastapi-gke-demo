name: FastAPI CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: sirisha-test1
  GKE_CLUSTER: gke-demo-cluster
  GKE_ZONE: us-central1-a
  IMAGE_NAME: fastapi-gke-demo
  DOCKER_IMAGE: us-central1-docker.pkg.dev/sirisha-test1/fastapi-repo/fastapi-gke-demo

jobs:
  # ------------------ STAGE 1: Checkout ------------------
  checkout:
    name: Checkout code & setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

  # ------------------ STAGE 2: Install dependencies ------------------
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r app/requirements.txt

  # ------------------ STAGE 3: Linting ------------------
  lint:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Install flake8
        run: pip install flake8 black
      - name: Run flake8
        run: flake8 app --max-line-length=100
      - name: Run black (format check)
        run: black --check app

  # ------------------ STAGE 4: Security Scanning ------------------
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit scan
        run: bandit -r app -ll

  # ------------------ STAGE 5: Unit Test ------------------
  test:
    name: Unit Test & Coverage
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r app/requirements.txt
      - name: Run tests
        run: |
          export PYTHONPATH=.
          pytest --maxfail=1 --disable-warnings --cov=app -q

  # ------------------ STAGE 6: Build Docker image ------------------
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE:${{ github.sha }} .

      - name: Push Docker image
        run: docker push $DOCKER_IMAGE:${{ github.sha }}

  # ------------------ STAGE 7: Docker Image Scan ------------------
  scan-image:
    name: Scan Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker auth for GAR
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

  # ------------------ CD: Deploy to GKE ------------------
  deploy:
   name: Deploy to GKE
   runs-on: ubuntu-latest
   needs: scan-image
   steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin --quiet

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Get GKE credentials
      run: gcloud container clusters get-credentials fastapi-cluster --region us-central1 --project sirisha-test1

    - name: Update deployment with new image
      run: kubectl set image deployment/fastapi-deployment fastapi-container=$DOCKER_IMAGE:${{ github.sha }}

    - name: Verify rollout
      run: kubectl rollout status deployment/fastapi-deployment
